name: build-push-deploy
run-name: ${{ github.actor }} is running deploy
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: make env file
        run:
          echo "AIRFLOW_UID=${{ secrets.AIRFLOW_UID }}" >> .env
          echo "AIRFLOW__CORE__EXECUTOR=${{ secrets.AIRFLOW__CORE__EXECUTOR }}" >> .env
          echo "AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${{ secrets.AIRFLOW__DATABASE__SQL_ALCHEMY_CONN }}" >> .env
          echo "DEV_MODE=${{ secrets.DEV_MODE }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_URI=${{ secrets.POSTGRES_URI }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "SQLALCHEMY_DATABASE_URI=${{ secrets.SQLALCHEMY_DATABASE_URI }}" >> .env
      - name: login to github packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the containers and push the images to ghrc.io
        run: docker compose --profile pushable build --push 
      - name: Create SSH key on the runner
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      - name: push the compose file with rsync
        run: rsync -av ./docker-compose.prod.yaml {{ secrets.VPS_USER }}@{{ secrets.IPADDRESS }}:~/air-quality
      - name: SSH and compose it up!
        run: |
          ssh -t {{ secrets.VPS_USER }}@{{ secrets.IPADDRESS }} "cd ~/air-quality && docker compose down && docker compose up -d"